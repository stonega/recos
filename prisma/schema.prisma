generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  credit         Int       @default(20)
  accounts       Account[]
  sessions       Session[]
  credit_history Credit[]
  lang           String    @default("en-US")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Credit {
  id           String   @id @default(cuid())
  create_at    DateTime @default(now())
  name         String?
  credit       Int      @default(0)
  userId       String
  type         String
  audio_length Int      @default(0)
  audio_url    String   @default("")
  prompt       String   @default("")
  audio_image  String   @default("")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  status       String   @default("pending")
  task_id      String   @default("")

  @@index([userId])
}
